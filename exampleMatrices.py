# -*- coding: utf-8 -*-
"""
Created on Wed Oct 31 17:38:28 2018

@author: Semih
"""
from matrices import Matrix,Identity

# =============================================================================
"""Example Inputs"""      
# =============================================================================
projectGrid="""08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"""

#Valid Matrices
proj=Matrix(listed=projectGrid)
v=Matrix()
o=Matrix(dim=8,randomFill=0)
a=Matrix(0)
b=Matrix(1)
d=Matrix(10)
e=Matrix(8,randomFill=0)
f=Matrix(dim=6,inRange=[-1250,1250])
sub=f.sub(1,4,2,3)
g=Matrix(dim=[3,6])
h=proj.sub(12,18,5,11)
j=g.sub(2,3,1,4)

#String inputs Matrices
validStr1=Matrix(dim=[2,3],listed=" 34-52\n33a c9d88 hello\n--3-")
validStr2=Matrix(listed="312as45\ndid12,,,44\ncc352as45\ndid12,,,44\ncc3-5")
invalidStr=Matrix(listed="312as45\ndid12,,,44\ncc3-5312as45\ndid12,,,44\ncc3-5")

#InvalidMatrices
k=Matrix(dim=-1)
l=Matrix(inRange=[0])
m=Matrix(inRange=[0,0],rangeLock=1)

#Identity Matrices
id1=Identity()
id2=Identity(5)
id3=id2.sub(3,3)
id4=Identity(6)

# =============================================================================
for matrix in [proj,v,o,a,b,validStr1,validStr2,d,e,f,sub,g,h,j,k,l,m]:
    print(matrix)
 
for i in [id1,id2,id3,id4]:
    print(i)
print('#######################')
print("Attribute call outputs\n")
print("d.matix:\n",d.matrix,"\n")
print('################')
print("f.sub(1,4,2,3):\n",sub,"\n")
print('################')
print("proj.dim:\n",proj.dim,"\n")
print('################')
print("validStr2.inRange:\n",validStr2.inRange,"\n")
print('################')
print("e.matrix:\n",e.summary,"\n")
print('################')
print("f.avg:\n",f.avg,"\n")
print('################')
print("g:\n",print(g))
print('################')
print("g.delRC(3):\n")
print(g.delRC(3))
print('################')
print("h=proj.sub(12,18,5,11):\n",h,"\n")
print('################')
print("j=g.sub(2,3,1,4):\n",j,"\n")
print("j.summary\n",j.summary)
print('################')
print("proj.delRC(5,15):\n")
print(proj.delRC(5,15))
print('################')
print("id2.matrix:\n",id2.matrix)
print("\nid2.addDim(2):",id2.addDim(2))
print(id2)
print("id2.matrix:\n",id2.matrix)
print('################')
print("id3.delDim(2) is an invalid expression, because it was obtained by matrix's sub method\n")
print("id3:\n",print(id3))
print('################')
print("id4:\n",print(id4))
print("\nid4.delDim(6):\n")
print(id4.delDim(6))
print('################')
print("id4:",id4)
print("\nid4.addDim(10)):\n",id4.addDim(10)) 
print('################')
print("invalidStr:\n")
print(invalidStr)         
print('################')
print("")
# =============================================================================
""" Expected Outputs """
# =============================================================================
"""
###Error message from invalidStr###
Can't create a square matrix with given input 
Invalid string
Error getting matrix
range error
Bad matrix and/or dimension
'NoneType' object is not iterable
##########################

Square matrix
Dimension: 20x20
Numbers' range: [0, 99]
Average: 47

 8  2 22 97 38 15  0 40  0 75  4  5  7 78 52 12 50 77 91  8 
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48  4 56 62  0 
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30  3 49 13 36 65 
52 70 95 23  4 60 11 42 69 24 68 56  1 32 56 71 37  2 36 91 
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 
24 47 32 60 99  3 45  2 44 75 33 53 78 36 84 20 35 17 12 50 
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 
67 26 20 68  2 62 12 20 95 63 94 39 63  8 40 91 66 49 94 21 
24 55 58  5 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 
21 36 23  9 75  0 76 44 20 45 35 14  0 61 33 97 34 31 33 95 
78 17 53 28 22 75 31 67 15 94  3 80  4 62 16 14  9 53 56 92 
16 39  5 42 96 35 31 47 55 58 88 24  0 17 54 24 36 29 85 57 
86 56  0 48 35 71 89  7  5 44 44 37 44 60 21 58 51 54 17 58 
19 80 81 68  5 94 47 69 28 73 92 13 86 52 17 77  4 89 55 40 
 4 52  8 83 97 35 99 16  7 97 57 32 16 26 26 79 33 27 98 66 
88 36 68 87 57 62 20 72  3 46 33 67 46 55 12 32 63 93 53 69 
 4 42 16 73 38 25 39 11 24 94 72 18  8 46 29 32 40 62 76 36 
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74  4 36 16 
20 73 35 29 78 31 90  1 74 31 49 71 48 86 81 16 23 57  5 54 
 1 70 54 71 83 51 54 69 16 92 33 48 61 43 52  1 89 19 67 48 

Invalid matrix


Square matrix
Dimension: 8x8
Numbers' range: [-117, 118]
Average: -2

 -89   48  -67   19  -43 -117  -75   38 
  91   33 -107  105   17  -43   27   85 
 100  -10  -27  -12   49  -63   45 -112 
 -12  -85  115   26  118  -53  -44   97 
 -19  -27   95  -37  -43   87   -3 -106 
  79  -77   93  -98  -52    3  -23   62 
 -17  108  -40   29   10   -7  -39   43 
 -92 -114  -54    8   29    9  -39   67 


Square matrix
Dimension: 0x0
Numbers' range: [0, 0]
Average: None



Square matrix
Dimension: 1x1
Numbers' range: [-27, -27]
Average: -27

-27 


Dimension: 1x6
Numbers' range: [-52, 88]
Average: 19

 34 -52  33   9  88   3 


Dimension: 5x2
Numbers' range: [-5, 352]
Average: 86

312  45 
 12  44 
352  45 
 12  44 
  3  -5 


Square matrix
Dimension: 10x10
Numbers' range: [-121, 125]
Average: -10

 125  -36  120  -96  118   13  -33   38  -95  -53 
 -62  -35  -91  -55  -97   36   36  -27    9  118 
 -49   34 -121   39 -111   86   -4 -113   76  -28 
 -19  -84  -15   18   38  -70   52  -66   66  -74 
  -3   98  -35   64  -66 -113   99  -20    6  -67 
 105   30  -71   -8   32  -41 -107  -37  -17 -105 
 121  -74  -73  -47  -76  -65   12   52 -108   31 
 -91  -31  -16   17  -84   18   71   11   63  -10 
  75  113  -65    6   64  -16   26  -61  103 -121 
 -97   64  -49  -29   75  109 -105  -37    0  -63 


Square matrix
Dimension: 8x8
Numbers' range: [-124, 125]
Average: -4

 -36   66  -92  -70   16  -98  -26  -69 
   3   78 -106 -122   97   80    3   37 
 -43   43   26   58  -97 -111   34  -41 
-116  -35   20 -113  -65  -59  123   93 
 101 -100   82  -26    6  107  -77   43 
  10  -27   40  -45 -114   42   62  -32 
 -13  112   63 -124  107  -16    1  109 
-112  125    2   75  -63  -66   79  -27 


Square matrix
Dimension: 6x6
Numbers' range: [-1064, 1238]
Average: 79

  443  -761  -421 -1057   240 -1064 
  105   453  1238   933    -8  -566 
 -595  1124  -659  -360  -604   992 
 -313  1060  -109    34   562   528 
  922  -961   929  -588   608   317 
  364  1190    97   -19  -560  -624 


Dimension: 4x2
Numbers' range: [-761, 1238]
Average: 240

-761 -421 
 453 1238 
1124 -659 
1060 -109 


Dimension: 3x6
Numbers' range: [-120, 115]
Average: -17

  96  115  -98  -21 -108   93 
 -77 -120  -66   58  107  -15 
 -22  -64 -120   -1  -11  -39 


Square matrix
Dimension: 7x7
Numbers' range: [3, 99]
Average: 51

96 35 31 47 55 58 88 
35 71 89  7  5 44 44 
 5 94 47 69 28 73 92 
97 35 99 16  7 97 57 
57 62 20 72  3 46 33 
38 25 39 11 24 94 72 
72 30 23 88 34 62 99 


Dimension: 2x4
Numbers' range: [-120, 58]
Average: -52

 -77 -120  -66   58 
 -22  -64 -120   -1 

Invalid matrix

Invalid matrix

Invalid matrix


Identity Matrix
Dimension: 1x1

1 


Identity Matrix
Dimension: 5x5

1 0 0 0 0 
0 1 0 0 0 
0 0 1 0 0 
0 0 0 1 0 
0 0 0 0 1 


Square matrix
Dimension: 3x3
Numbers' range: [0, 1]
Average: 0

1 0 0 
0 1 0 
0 0 1 


Identity Matrix
Dimension: 6x6

1 0 0 0 0 0 
0 1 0 0 0 0 
0 0 1 0 0 0 
0 0 0 1 0 0 
0 0 0 0 1 0 
0 0 0 0 0 1 

#######################
Attribute call outputs

d.matix:
 [[125, -36, 120, -96, 118, 13, -33, 38, -95, -53], [-62, -35, -91, -55, -97, 36, 36, -27, 9, 118], [-49, 34, -121, 39, -111, 86, -4, -113, 76, -28], [-19, -84, -15, 18, 38, -70, 52, -66, 66, -74], [-3, 98, -35, 64, -66, -113, 99, -20, 6, -67], [105, 30, -71, -8, 32, -41, -107, -37, -17, -105], [121, -74, -73, -47, -76, -65, 12, 52, -108, 31], [-91, -31, -16, 17, -84, 18, 71, 11, 63, -10], [75, 113, -65, 6, 64, -16, 26, -61, 103, -121], [-97, 64, -49, -29, 75, 109, -105, -37, 0, -63]] 

################
f.sub(1,4,2,3):
 
Dimension: 4x2
Numbers' range: [-761, 1238]
Average: 240

-761 -421 
 453 1238 
1124 -659 
1060 -109 
 

################
proj.dim:
 [20, 20] 

################
validStr2.inRange:
 [-5, 352] 

################
e.matrix:
 Matrix(dim=[8, 8],listed=[[-36, 66, -92, -70, 16, -98, -26, -69], [3, 78, -106, -122, 97, 80, 3, 37], [-43, 43, 26, 58, -97, -111, 34, -41], [-116, -35, 20, -113, -65, -59, 123, 93], [101, -100, 82, -26, 6, 107, -77, 43], [10, -27, 40, -45, -114, 42, 62, -32], [-13, 112, 63, -124, 107, -16, 1, 109], [-112, 125, 2, 75, -63, -66, 79, -27]],inRange=[-124, 125],rangeLock=0,randomFill=1) 

################
f.avg:
 79 

################

Dimension: 3x6
Numbers' range: [-120, 115]
Average: -17

  96  115  -98  -21 -108   93 
 -77 -120  -66   58  107  -15 
 -22  -64 -120   -1  -11  -39 

g:
 None
################
g.delRC(3):

Current dimension:  [3, 6]
Goal dimension:  [3, 3]
Old grid:
 
  96  115  -98  -21 -108   93 
 -77 -120  -66   58  107  -15 
 -22  -64 -120   -1  -11  -39 

New grid:

Square matrix
Dimension: 3x3
Numbers' range: [-120, 115]
Average: -40

  96  115  -98 
 -77 -120  -66 
 -22  -64 -120 

################
h=proj.sub(12,18,5,11):
 
Square matrix
Dimension: 7x7
Numbers' range: [3, 99]
Average: 51

96 35 31 47 55 58 88 
35 71 89  7  5 44 44 
 5 94 47 69 28 73 92 
97 35 99 16  7 97 57 
57 62 20 72  3 46 33 
38 25 39 11 24 94 72 
72 30 23 88 34 62 99 
 

################
j=g.sub(2,3,1,4):
 
Dimension: 2x4
Numbers' range: [-120, 58]
Average: -52

 -77 -120  -66   58 
 -22  -64 -120   -1 
 

j.summary
 Matrix(dim=[2, 4],listed=[[-77, -120, -66, 58], [-22, -64, -120, -1]],inRange=[-120, 58],rangeLock=0,randomFill=1)
################
proj.delRC(5,15):

Current dimension:  [20, 20]
Goal dimension:  [15, 5]
Old grid:
 
 8  2 22 97 38 15  0 40  0 75  4  5  7 78 52 12 50 77 91  8 
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48  4 56 62  0 
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30  3 49 13 36 65 
52 70 95 23  4 60 11 42 69 24 68 56  1 32 56 71 37  2 36 91 
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 
24 47 32 60 99  3 45  2 44 75 33 53 78 36 84 20 35 17 12 50 
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 
67 26 20 68  2 62 12 20 95 63 94 39 63  8 40 91 66 49 94 21 
24 55 58  5 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 
21 36 23  9 75  0 76 44 20 45 35 14  0 61 33 97 34 31 33 95 
78 17 53 28 22 75 31 67 15 94  3 80  4 62 16 14  9 53 56 92 
16 39  5 42 96 35 31 47 55 58 88 24  0 17 54 24 36 29 85 57 
86 56  0 48 35 71 89  7  5 44 44 37 44 60 21 58 51 54 17 58 
19 80 81 68  5 94 47 69 28 73 92 13 86 52 17 77  4 89 55 40 
 4 52  8 83 97 35 99 16  7 97 57 32 16 26 26 79 33 27 98 66 
88 36 68 87 57 62 20 72  3 46 33 67 46 55 12 32 63 93 53 69 
 4 42 16 73 38 25 39 11 24 94 72 18  8 46 29 32 40 62 76 36 
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74  4 36 16 
20 73 35 29 78 31 90  1 74 31 49 71 48 86 81 16 23 57  5 54 
 1 70 54 71 83 51 54 69 16 92 33 48 61 43 52  1 89 19 67 48 

New grid:

Dimension: 15x5
Numbers' range: [0, 99]
Average: 45

 8  2 22 97 38 
49 49 99 40 17 
81 49 31 73 55 
52 70 95 23  4 
22 31 16 71 51 
24 47 32 60 99 
32 98 81 28 64 
67 26 20 68  2 
24 55 58  5 66 
21 36 23  9 75 
78 17 53 28 22 
16 39  5 42 96 
86 56  0 48 35 
19 80 81 68  5 
 4 52  8 83 97 

################
id2.matrix:
 [[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 1]]

id2.addDim(2): 
Identity Matrix
Dimension: 7x7

1 0 0 0 0 0 0 
0 1 0 0 0 0 0 
0 0 1 0 0 0 0 
0 0 0 1 0 0 0 
0 0 0 0 1 0 0 
0 0 0 0 0 1 0 
0 0 0 0 0 0 1 


Identity Matrix
Dimension: 7x7

1 0 0 0 0 0 0 
0 1 0 0 0 0 0 
0 0 1 0 0 0 0 
0 0 0 1 0 0 0 
0 0 0 0 1 0 0 
0 0 0 0 0 1 0 
0 0 0 0 0 0 1 

id2.matrix:
 [[1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1]]
################
id3.delDim(2) is an invalid expression, because it was obtained by matrix's sub method


Square matrix
Dimension: 3x3
Numbers' range: [0, 1]
Average: 0

1 0 0 
0 1 0 
0 0 1 

id3:
 None
################

Identity Matrix
Dimension: 6x6

1 0 0 0 0 0 
0 1 0 0 0 0 
0 0 1 0 0 0 
0 0 0 1 0 0 
0 0 0 0 1 0 
0 0 0 0 0 1 

id4:
 None

id4.delDim(6):

All rows have been deleted

Identity Matrix
Dimension: 0x0


################
id4: 
Identity Matrix
Dimension: 0x0



id4.addDim(10)):
 
Identity Matrix
Dimension: 10x10

1 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 1 

################
invalidStr:

Invalid matrix

################
 """
# =============================================================================

